<!DOCTYPE html>
<html ng-app="rdu">

<head>
    <title>RDUUHOSNET</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="styles/angular-material.css">
    <link rel="stylesheet" href="styles/importer.css">
    <link rel="stylesheet" href="styles/material-icons.css">
    <link rel="stylesheet" href="styles/owl.carousel.css">
    <link rel="stylesheet" href="styles/owl.theme.green.css">
    <link rel="stylesheet" href="styles/app/aboutus.css">
    <link rel="stylesheet" href="styles/app/home.css">
    <link rel="stylesheet" href="styles/app/knowledge.css">
    <!--STYLES END-->
</head>


<body ng-cloak>
    <div layout="column" layout-fill ng-controller="LayoutCtrl as layout">

        <md-toolbar  >
            <div class="md-toolbar-tools custom">
                <div flex-offset="5" flex="15" hide-xs layout-align="center center"><a ng-href="/#/" >
                    <img ng-src="/images/layout/logo.png" alt="RDU" class="logo"></a>
                </div>
                <div flex-offset="5" flex="70" layout="column">
                    <span class="md-headline">โครงการส่งเสริมการใช้ยาอย่างสมเหตุผล</span>
                    <span class="md-caption" hide-xs>โดย เครือข่ายโรงพยาบาลกลุ่มสถาบันแพทยศาสตร์แห่งประเทศไทย (UHOSNET)</span>
                </div>
                <div flex="auto" show-xs hide-gt-xs layout-align="center center">
                    <md-button aria-label="left menu" ng-click="layout.openLeftMenu()" class="md-mini">
                        <img ng-src="/images/layout/menu-icon-2.png" alt="menu" class="menu-icon">
                    </md-button>
                </div>
            </div>
        </md-toolbar>
        <%- partial( "shared/menu") %>
        <md-content style="height: 100%">
            <%- partial ("shared/sidebar") %>
            <div flex>
                <%- body %>
            </div>
        </md-content>

    </div>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="js/dependencies/lodash.js"></script>
    <script src="js/dependencies/angular.js"></script>
    <script src="js/dependencies/angular-animate.js"></script>
    <script src="js/dependencies/angular-aria.js"></script>
    <script src="js/dependencies/angular-resource.js"></script>
    <script src="js/dependencies/angular-route.js"></script>
    <script src="js/dependencies/jquery.js"></script>
    <script src="js/dependencies/owl.carousel.js"></script>
    <script src="js/dependencies/angular-material.js"></script>
    <script src="js/app/modules/core.module.js"></script>
    <script src="js/app/modules/ui.home.module.js"></script>
    <script src="js/app/modules/ui.knowledge.module.js"></script>
    <script src="js/app/modules/ui.module.js"></script>
    <script src="js/app/controllers/aboutus.controller.js"></script>
    <script src="js/app/controllers/contactus.controller.js"></script>
    <script src="js/app/controllers/home.controller.js"></script>
    <script src="js/app/controllers/knowledge.controller.js"></script>
    <script src="js/app/controllers/layout.controller.js"></script>
    <script src="js/app/controllers/member.controller.js"></script>
    <script src="js/app/factories/dbfile.factory.js"></script>
    <script src="js/app/factories/lodash.factory.js"></script>
    <script src="js/app/factories/state.factory.js"></script>
    <script src="js/app/filters/defaultDashFilter.js"></script>
    <script src="js/app/filters/lineBreakFilter.js"></script>
    <script src="js/app/app.js"></script>
    <!--SCRIPTS END-->
</body>

</html>